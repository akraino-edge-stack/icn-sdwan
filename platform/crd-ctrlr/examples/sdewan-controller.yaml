apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: sdewan-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: mwan3policies.batch.sdewan.akraino.org
spec:
  group: batch.sdewan.akraino.org
  names:
    kind: Mwan3Policy
    listKind: Mwan3PolicyList
    plural: mwan3policies
    singular: mwan3policy
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Mwan3Policy is the Schema for the mwan3policies API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            members:
              items:
                description: Mwan3PolicySpec defines the desired state of Mwan3Policy
                properties:
                  metric:
                    type: integer
                  network:
                    description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of
                      cluster Important: Run "make" to regenerate code after modifying
                      this file'
                    type: string
                  weight:
                    type: integer
                required:
                - metric
                - network
                - weight
                type: object
              type: array
          required:
          - members
          type: object
        status:
          description: status subsource used for Sdewan rule CRDs
          properties:
            appliedGeneration:
              format: int64
              type: integer
            appliedTime:
              format: date-time
              type: string
            message:
              type: string
            state:
              type: string
          required:
          - state
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: mwan3rules.batch.sdewan.akraino.org
spec:
  group: batch.sdewan.akraino.org
  names:
    kind: Mwan3Rule
    listKind: Mwan3RuleList
    plural: mwan3rules
    singular: mwan3rule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Mwan3Rule is the Schema for the mwan3rules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            dest_ip:
              type: string
            dest_port:
              type: string
            family:
              type: string
            policy:
              type: string
            proto:
              type: string
            src_ip:
              type: string
            src_port:
              type: string
            sticky:
              type: string
            timeout:
              type: string
          required:
          - dest_ip
          - dest_port
          - family
          - policy
          - proto
          - src_ip
          - src_port
          - sticky
          - timeout
          type: object
        status:
          description: status subsource used for Sdewan rule CRDs
          properties:
            appliedGeneration:
              format: int64
              type: integer
            appliedTime:
              format: date-time
              type: string
            message:
              type: string
            state:
              type: string
          required:
          - state
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sdewan-leader-election-role
  namespace: sdewan-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    sdewan-bucket-type-permission: '{ "*": ["*"]}'
  creationTimestamp: null
  name: sdewan-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch.sdewan.akraino.org
  resources:
  - mwan3policies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch.sdewan.akraino.org
  resources:
  - mwan3policies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - batch.sdewan.akraino.org
  resources:
  - mwan3rules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch.sdewan.akraino.org
  resources:
  - mwan3rules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sdewan-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sdewan-leader-election-rolebinding
  namespace: sdewan-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sdewan-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sdewan-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sdewan-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sdewan-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sdewan-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sdewan-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sdewan-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sdewan-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: sdewan-controller-manager-metrics-service
  namespace: sdewan-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: sdewan-webhook-service
  namespace: sdewan-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: sdewan-controller-manager
  namespace: sdewan-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: integratedcloudnative/sdewan-controller:dev
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: sdewan-serving-cert
  namespace: sdewan-system
spec:
  dnsNames:
  - sdewan-webhook-service.sdewan-system.svc
  - sdewan-webhook-service.sdewan-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: sdewan-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: sdewan-selfsigned-issuer
  namespace: sdewan-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: sdewan-system/sdewan-serving-cert
  creationTimestamp: null
  name: sdewan-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: sdewan-webhook-service
      namespace: sdewan-system
      path: /validate-sdewan-bucket-permission
  failurePolicy: Fail
  name: validate-sdewan-bucket.akraino.org
  rules:
  - apiGroups:
    - batch.sdewan.akraino.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mwan3policies
    - mwan3rules
