// +build !ignore_autogenerated

/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CryptoProposal) DeepCopyInto(out *CryptoProposal) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CryptoProposal.
func (in *CryptoProposal) DeepCopy() *CryptoProposal {
	if in == nil {
		return nil
	}
	out := new(CryptoProposal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSecStatus) DeepCopyInto(out *IPSecStatus) {
	*out = *in
	if in.AppliedTime != nil {
		in, out := &in.AppliedTime, &out.AppliedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSecStatus.
func (in *IPSecStatus) DeepCopy() *IPSecStatus {
	if in == nil {
		return nil
	}
	out := new(IPSecStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecSite) DeepCopyInto(out *IpsecSite) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecSite.
func (in *IpsecSite) DeepCopy() *IpsecSite {
	if in == nil {
		return nil
	}
	out := new(IpsecSite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecSite) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecSiteList) DeepCopyInto(out *IpsecSiteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IpsecSite, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecSiteList.
func (in *IpsecSiteList) DeepCopy() *IpsecSiteList {
	if in == nil {
		return nil
	}
	out := new(IpsecSiteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecSiteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecSiteSpec) DeepCopyInto(out *IpsecSiteSpec) {
	*out = *in
	in.Site.DeepCopyInto(&out.Site)
	if in.Proposal != nil {
		in, out := &in.Proposal, &out.Proposal
		*out = make([]CryptoProposal, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecSiteSpec.
func (in *IpsecSiteSpec) DeepCopy() *IpsecSiteSpec {
	if in == nil {
		return nil
	}
	out := new(IpsecSiteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecSiteStatus) DeepCopyInto(out *IpsecSiteStatus) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecSiteStatus.
func (in *IpsecSiteStatus) DeepCopy() *IpsecSiteStatus {
	if in == nil {
		return nil
	}
	out := new(IpsecSiteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mwan3Conf) DeepCopyInto(out *Mwan3Conf) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mwan3Conf.
func (in *Mwan3Conf) DeepCopy() *Mwan3Conf {
	if in == nil {
		return nil
	}
	out := new(Mwan3Conf)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Mwan3Conf) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mwan3ConfList) DeepCopyInto(out *Mwan3ConfList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Mwan3Conf, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mwan3ConfList.
func (in *Mwan3ConfList) DeepCopy() *Mwan3ConfList {
	if in == nil {
		return nil
	}
	out := new(Mwan3ConfList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Mwan3ConfList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mwan3ConfSpec) DeepCopyInto(out *Mwan3ConfSpec) {
	*out = *in
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make(map[string]PolicyMembers, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make(map[string]Rule, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mwan3ConfSpec.
func (in *Mwan3ConfSpec) DeepCopy() *Mwan3ConfSpec {
	if in == nil {
		return nil
	}
	out := new(Mwan3ConfSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mwan3ConfStatus) DeepCopyInto(out *Mwan3ConfStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mwan3ConfStatus.
func (in *Mwan3ConfStatus) DeepCopy() *Mwan3ConfStatus {
	if in == nil {
		return nil
	}
	out := new(Mwan3ConfStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mwan3Status) DeepCopyInto(out *Mwan3Status) {
	*out = *in
	if in.AppliedTime != nil {
		in, out := &in.AppliedTime, &out.AppliedTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mwan3Status.
func (in *Mwan3Status) DeepCopy() *Mwan3Status {
	if in == nil {
		return nil
	}
	out := new(Mwan3Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyMember) DeepCopyInto(out *PolicyMember) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyMember.
func (in *PolicyMember) DeepCopy() *PolicyMember {
	if in == nil {
		return nil
	}
	out := new(PolicyMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyMembers) DeepCopyInto(out *PolicyMembers) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]PolicyMember, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyMembers.
func (in *PolicyMembers) DeepCopy() *PolicyMembers {
	if in == nil {
		return nil
	}
	out := new(PolicyMembers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sdewan) DeepCopyInto(out *Sdewan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sdewan.
func (in *Sdewan) DeepCopy() *Sdewan {
	if in == nil {
		return nil
	}
	out := new(Sdewan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Sdewan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdewanList) DeepCopyInto(out *SdewanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Sdewan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdewanList.
func (in *SdewanList) DeepCopy() *SdewanList {
	if in == nil {
		return nil
	}
	out := new(SdewanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SdewanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdewanSpec) DeepCopyInto(out *SdewanSpec) {
	*out = *in
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]Network, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdewanSpec.
func (in *SdewanSpec) DeepCopy() *SdewanSpec {
	if in == nil {
		return nil
	}
	out := new(SdewanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdewanStatus) DeepCopyInto(out *SdewanStatus) {
	*out = *in
	in.Mwan3Status.DeepCopyInto(&out.Mwan3Status)
	in.IpsecStatus.DeepCopyInto(&out.IpsecStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdewanStatus.
func (in *SdewanStatus) DeepCopy() *SdewanStatus {
	if in == nil {
		return nil
	}
	out := new(SdewanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConnection) DeepCopyInto(out *SiteConnection) {
	*out = *in
	if in.CryptoProposal != nil {
		in, out := &in.CryptoProposal, &out.CryptoProposal
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConnection.
func (in *SiteConnection) DeepCopy() *SiteConnection {
	if in == nil {
		return nil
	}
	out := new(SiteConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConnections) DeepCopyInto(out *SiteConnections) {
	*out = *in
	if in.CryptoProposal != nil {
		in, out := &in.CryptoProposal, &out.CryptoProposal
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = make([]SiteConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConnections.
func (in *SiteConnections) DeepCopy() *SiteConnections {
	if in == nil {
		return nil
	}
	out := new(SiteConnections)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmatchError) DeepCopyInto(out *UnmatchError) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmatchError.
func (in *UnmatchError) DeepCopy() *UnmatchError {
	if in == nil {
		return nil
	}
	out := new(UnmatchError)
	in.DeepCopyInto(out)
	return out
}
